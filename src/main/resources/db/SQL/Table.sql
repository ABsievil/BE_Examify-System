CREATE TABLE Users (
    ID TEXT PRIMARY KEY,
    Name TEXT,
    Email TEXT UNIQUE,
    Dob DATE
);

CREATE TABLE Account (
    Username TEXT PRIMARY KEY,
    Password TEXT NOT NULL,
    Role TEXT NOT NULL,
    UserID TEXT UNIQUE NOT NULL,
    FOREIGN KEY (UserID) REFERENCES Users(ID) ON DELETE CASCADE
);

CREATE TABLE Test (
    ID SERIAL PRIMARY KEY,
    Title TEXT NOT NULL,
    Description TEXT,
    NumberQuestion INT,
    Passcode TEXT UNIQUE,
    TestTime INT NOT NULL,
    TimeOpen TIMESTAMP,
    TimeClose TIMESTAMP,
    TeacherID TEXT NOT NULL,
    FOREIGN KEY (TeacherID) REFERENCES Users(ID) ON DELETE CASCADE
);

CREATE OR REPLACE FUNCTION generate_passcode()
RETURNS TRIGGER AS $$
BEGIN
    IF NEW.Passcode IS NULL THEN
        NEW.Passcode := LPAD(FLOOR(RANDOM() * 100000000)::TEXT, 8, '0');
    END IF;

    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

ALTER SEQUENCE Test_ID_seq RESTART WITH 1;

CREATE TABLE Result (
    StudentID TEXT NOT NULL,
    TestID INT NOT NULL,
    TotalScore INT NOT NULL,
    StartTime TIMESTAMP NOT NULL,
    EndTime TIMESTAMP NOT NULL,
    PRIMARY KEY (StudentID, TestID),
    FOREIGN KEY (StudentID) REFERENCES Users(ID) ON DELETE CASCADE,
    FOREIGN KEY (TestID) REFERENCES Test(ID) ON DELETE CASCADE
);

CREATE TABLE Question (
    ID SERIAL PRIMARY KEY,
    Content TEXT NOT NULL,
    Score FLOAT NOT NULL,
    TestID INT NOT NULL,
    FOREIGN KEY (TestID) REFERENCES Test(ID) ON DELETE CASCADE
);

ALTER SEQUENCE Question_ID_seq RESTART WITH 1;

CREATE TABLE StudentAnswer (
    StudentID TEXT NOT NULL,
    QuestionID INT NOT NULL,
    IsCorrect BOOLEAN NOT NULL,
    PRIMARY KEY (StudentID, QuestionID),
    FOREIGN KEY (StudentID) REFERENCES Users(ID) ON DELETE CASCADE,
    FOREIGN KEY (QuestionID) REFERENCES Question(ID) ON DELETE CASCADE
);

CREATE TABLE Answer (
    ID SERIAL PRIMARY KEY,
    Content TEXT NOT NULL,
    IsCorrect BOOLEAN NOT NULL,
    QuestionID INT NOT NULL,
    FOREIGN KEY (QuestionID) REFERENCES Question(ID) ON DELETE CASCADE
);

ALTER SEQUENCE Answer_ID_seq RESTART WITH 1;