CREATE TABLE Users (
    ID TEXT PRIMARY KEY DEFAULT '',
    Name TEXT,
    Email TEXT UNIQUE,
    Dob DATE,
    Role TEXT NOT NULL
);

CREATE OR REPLACE FUNCTION generate_user_id()
RETURNS TRIGGER AS $$
BEGIN
    NEW.ID := NEW.Role || '-' || (10000 + floor(random() * 90000))::TEXT;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER user_id_trigger
BEFORE INSERT ON Users
FOR EACH ROW
EXECUTE FUNCTION generate_user_id();

CREATE TABLE Account (
    Username TEXT PRIMARY KEY,
    Password TEXT NOT NULL,
    UserID TEXT UNIQUE NOT NULL,
    FOREIGN KEY (UserID) REFERENCES Users(ID) ON DELETE CASCADE
);

CREATE TABLE Test (
    ID SERIAL PRIMARY KEY,
    Title TEXT NOT NULL,
    Description TEXT,
    Passcode TEXT,
    TestTime INT NOT NULL,
    TimeOpen TIMESTAMP,
    TimeClose TIMESTAMP,
    TeacherID TEXT NOT NULL,
    FOREIGN KEY (TeacherID) REFERENCES Users(ID) ON DELETE CASCADE
);

ALTER SEQUENCE Test_ID_seq RESTART WITH 1;

CREATE TABLE Result (
    StudentID TEXT NOT NULL,
    TestID INT NOT NULL,
    TotalScore INT NOT NULL,
    SubmittedAt TIMESTAMP NOT NULL,
    StartTime TIMESTAMP NOT NULL,
    EndTime TIMESTAMP NOT NULL,
    PRIMARY KEY (StudentID, TestID),
    FOREIGN KEY (StudentID) REFERENCES Users(ID) ON DELETE CASCADE,
    FOREIGN KEY (TestID) REFERENCES Test(ID) ON DELETE CASCADE
);

CREATE TABLE Question (
    ID SERIAL PRIMARY KEY,
    Content TEXT NOT NULL,
    Score FLOAT NOT NULL,
    TestID INT NOT NULL,
    FOREIGN KEY (TestID) REFERENCES Test(ID) ON DELETE CASCADE
);

ALTER SEQUENCE Question_ID_seq RESTART WITH 1;

CREATE TABLE StudentAnswer (
    StudentID TEXT NOT NULL,
    QuestionID INT NOT NULL,
    IsCorrect BOOLEAN NOT NULL,
    PRIMARY KEY (StudentID, QuestionID),
    FOREIGN KEY (StudentID) REFERENCES Users(ID) ON DELETE CASCADE,
    FOREIGN KEY (QuestionID) REFERENCES Question(ID) ON DELETE CASCADE
);

CREATE TABLE Answer (
    ID SERIAL PRIMARY KEY,
    Content TEXT NOT NULL,
    IsCorrect BOOLEAN NOT NULL,
    QuestionID INT NOT NULL,
    FOREIGN KEY (QuestionID) REFERENCES Question(ID) ON DELETE CASCADE
);

ALTER SEQUENCE Answer_ID_seq RESTART WITH 1;